# proxy
# jdk, vertx
http_server=vertx
# fork, vthread, fixed, event_loop (only for vertx)
executor=event_loop
http_port=8090
# jdk options
# default to 0, leading to a work stealing pool in jdk
http_thread_pool_size=0
# default to 0, that is, unlimited number of connections
backlog=0
# vertx options
num_vertices=1
native_transport=true

# microservice http urls
cart_host=localhost
product_host=localhost
stock_host=localhost
order_host=localhost
payment_host=localhost
shipment_host=localhost
seller_host=localhost

# registered transactions to enable
#transactions=update_product
#transactions=update_product,update_price
transactions=update_product,update_price,customer_checkout
#transactions=update_product,update_price,customer_checkout,update_delivery

# coordinator network options
tcp_port=8091
# default to 0, leading to pick the default network group
network_thread_pool_size=0
network_buffer_size=0
os_buffer_size=0
network_send_timeout=0

# coordinator batch options
batch_window_ms=1000
num_max_transactions_batch=1000

# vms worker options
num_vms_workers=1
num_queues_vms_worker=1
num_transaction_workers=1
max_sleep=250

# logging
logging=false
